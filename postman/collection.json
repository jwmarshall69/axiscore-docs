{
  "info": {
    "name": "Example Items API",
    "_postman_id": "11111111-1111-1111-1111-111111111111",
    "description": "Collection with GET /items and POST /items. Update baseUrl/token as needed.",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
  },
  "variable": [
    {
      "key": "baseUrl",
      "value": "https://api.example.com/v1"
    },
    {
      "key": "limit",
      "value": "5"
    },
    {
      "key": "token",
      "value": ""
    }
  ],
  "item": [
    {
      "name": "List items",
      "request": {
        "method": "GET",
        "header": [
          {
            "key": "Accept",
            "value": "application/json"
          }
        ],
        "url": {
          "raw": "{{baseUrl}}/items?limit={{limit}}",
          "host": [
            "{{baseUrl}}"
          ],
          "path": [
            "items"
          ],
          "query": [
            {
              "key": "limit",
              "value": "{{limit}}"
            }
          ]
        }
      },
      "event": [
        {
          "listen": "test",
          "script": {
            "type": "text/javascript",
            "exec": [
              "pm.test('Status code is 200', function () {",
              "  pm.response.to.have.status(200);",
              "});",
              "const json = pm.response.json();",
              "pm.test('Response has data array', function () {",
              "  pm.expect(json).to.have.property('data');",
              "  pm.expect(json.data).to.be.an('array');",
              "});"
            ]
          }
        }
      ],
      "response": []
    },
    {
      "name": "Create item",
      "event": [
        {
          "listen": "prerequest",
          "script": {
            "type": "text/javascript",
            "exec": [
              "if (pm.variables.get('token')) {",
              "  pm.request.headers.upsert({ key: 'Authorization', value: 'Bearer ' + pm.variables.get('token') });",
              "}"
            ]
          }
        },
        {
          "listen": "test",
          "script": {
            "type": "text/javascript",
            "exec": [
              "pm.test('Status code is 201', function () {",
              "  pm.response.to.have.status(201);",
              "});",
              "const json = pm.response.json();",
              "pm.test('Response has id and name', function () {",
              "  pm.expect(json).to.have.property('id');",
              "  pm.expect(json).to.have.property('name');",
              "});",
              "pm.test('createdAt is ISO-like timestamp', function () {",
              "  pm.expect(json).to.have.property('createdAt');",
              "  pm.expect(String(json.createdAt)).to.match(/^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}(\\.\\d+)?Z$/);",
              "});"
            ]
          }
        }
      ],
      "request": {
        "method": "POST",
        "header": [
          {
            "key": "Accept",
            "value": "application/json"
          },
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "url": {
          "raw": "{{baseUrl}}/items",
          "host": [
            "{{baseUrl}}"
          ],
          "path": [
            "items"
          ]
        },
        "body": {
          "mode": "raw",
          "raw": "{\n  \"name\": \"Widget\",\n  \"price\": 19.99,\n  \"metadata\": { \"color\": \"blue\" }\n}"
        }
      },
      "response": []
    }
  ]
}